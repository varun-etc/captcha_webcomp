import { Component, h, Prop, Element, Event } from '@stencil/core';
export class FabItemComponent {
    toggle() {
        this.didClick.emit(this.el.innerText);
    }
    render() {
        return (h("div", { class: "se-fab-item", onClick: () => this.toggle() },
            h("span", { class: "description" },
                h("slot", null)),
            this.icon ? h("se-icon", null, this.icon) : h("slot", { name: "icon" })));
    }
    static get is() { return "se-fab-item"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["fab-item.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["fab-item.css"]
    }; }
    static get properties() { return {
        "icon": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Property that determines if an icon is included in the floating action button."
            },
            "attribute": "icon",
            "reflect": false
        }
    }; }
    static get events() { return [{
            "method": "didClick",
            "name": "didClick",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Send the value of the caption to the parent when clicking on the item."
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
    static get elementRef() { return "el"; }
}
