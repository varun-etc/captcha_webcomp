import { Component, Event, h, Host, Prop, Watch } from '@stencil/core';
export class SidemenuItemComponent {
    constructor() {
        /**
         * Defines if the menu item is active or not.
         * The default setting is `false`.
         */
        this.active = false;
    }
    activeDidChange() {
        if (this.active) {
            this.didClick.emit();
        }
    }
    render() {
        return (h(Host, { role: 'sidenavpanel', "aria-hidden": { 'true': !this.active }, class: [this.active ? 'active' : 'navitem-hidden'].join(' ') },
            h("slot", null)));
    }
    static get is() { return "se-sidemenu-item"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["sidemenu-item.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["sidemenu-item.css"]
    }; }
    static get properties() { return {
        "item": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Defines the title of the menu item."
            },
            "attribute": "item",
            "reflect": false
        },
        "active": {
            "type": "boolean",
            "mutable": true,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Defines if the menu item is active or not.\nThe default setting is `false`."
            },
            "attribute": "active",
            "reflect": false,
            "defaultValue": "false"
        }
    }; }
    static get events() { return [{
            "method": "didClick",
            "name": "didClick",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Send an event when the sidemenu item changes"
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
    static get watchers() { return [{
            "propName": "active",
            "methodName": "activeDidChange"
        }]; }
}
