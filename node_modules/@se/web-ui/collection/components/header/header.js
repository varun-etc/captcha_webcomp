import { Component, h, Prop, Element, State } from "@stencil/core";
import { getFullTitle } from "../../utils/utils";
import { AppInfo } from "../appInfo";
import burgerMenu from "@se/icons/svg/burger_menu.svg";
export class HeaderComponent {
    constructor() {
        /**
         * Sets the title of your application.
         */
        this.appTitle = "";
        /**
         * Defines the domain of the application. By default, the domain is `ecostruxure`. If `none`, then no domain will be displayed.
         */
        this.domain = AppInfo.domain;
    }
    onClickMenu() {
        this.elLeftNav.toggle();
    }
    async componentWillLoad() {
        this.elLeftNav = this.el.querySelector("se-sidemenu");
        this.hasMenu = !!this.elLeftNav;
    }
    render() {
        const title = getFullTitle(this.appTitle);
        let domain;
        if (this.domain.toLowerCase() === `ecostruxure`) {
            domain = h("se-icon-ecostruxure", { class: "header-title-type" });
        }
        else if (this.domain.toLowerCase() !== "none") {
            domain = h("span", { class: "header-title-type" }, this.domain);
        }
        return [
            h("div", { class: "d-flex" },
                this.hasMenu ?
                    h("span", { class: "menu-sidenav", onClick: () => this.onClickMenu() },
                        h("se-icon", { size: "medium", color: "primary" },
                            h("span", { innerHTML: burgerMenu })))
                    : '',
                h("div", { class: "d-flex-column header-title-wrapper" },
                    domain,
                    h("h1", { class: "header-title no-margin" },
                        h("span", null, title.first),
                        h("span", { class: "light" },
                            "\u00A0",
                            title.last))),
                this.project ? h("span", { class: "project-section" }, this.project) : ''),
            h("div", { class: "padding-container d-flex" },
                h("slot", { name: "start" })),
            h("div", { class: "fill-space center-header-container" },
                h("slot", null)),
            h("div", { class: "padding-container d-flex" },
                h("slot", { name: "end" }),
                h("se-icon-schneider", { class: "header-title-type" }))
        ];
    }
    static get is() { return "se-header"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["header.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["header.css"]
    }; }
    static get properties() { return {
        "appTitle": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Sets the title of your application."
            },
            "attribute": "app-title",
            "reflect": false,
            "defaultValue": "\"\""
        },
        "domain": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Defines the domain of the application. By default, the domain is `ecostruxure`. If `none`, then no domain will be displayed."
            },
            "attribute": "domain",
            "reflect": false,
            "defaultValue": "AppInfo.domain"
        },
        "project": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Defines the project name (useful for small projects) that can be used for versioning as well. It will be placed at the right side of the title."
            },
            "attribute": "project",
            "reflect": false
        }
    }; }
    static get states() { return {
        "hasMenu": {}
    }; }
    static get elementRef() { return "el"; }
}
