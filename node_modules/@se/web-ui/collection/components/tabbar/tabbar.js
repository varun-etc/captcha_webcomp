import { Component, h, Prop } from '@stencil/core';
export class TabbarComponent {
    constructor() {
        /**
         * Defines the function of the tabbar.
         * Default `nav` creates a tab bar that functions as a nav-bar.
         * `content` creates a ta bbar that functions as a content section tab bar.
         */
        this.option = "nav";
        /**
         * Indicates the overflow behavior of your tab bar.
         * Default setting is `scroll`, keeping all tabs in one horizontal row.
         * The `stack` setting allows your tabbar content wrap to new lines.
         * The `compact` setting allows your tabbar content to scroll, but all stack the text together as much as possible.
         */
        this.overflow = "scroll";
        /**
         * Indicates the color of your tab bar.
         * Default setting is `primary`, rendering a green background for nav-bars and ultra-light-grey-1 for content.
         * The `alternative` setting renders a white background.
         */
        this.color = 'primary';
    }
    render() {
        return (h("div", { class: [`tab-${this.color}`, "d-flex-main", `opt-${this.option}`].join(' ') },
            h("div", { class: "nav-left-wrapper centered" },
                h("slot", { name: "start" })),
            h("div", { class: ["fill-space", "nav-center-wrapper", `opt-${this.option}`, !!this.overflow ? this.overflow : ''].join(' ') },
                h("slot", null)),
            h("div", { class: [`tab-end-${this.color}`, `opt-end-${this.option}`, "centered"].join(' ') },
                h("slot", { name: "end" })),
            h("div", { class: [`tab-end-${this.color}`, `opt-end-${this.option}`, "centered", "edge"].join(' ') },
                h("slot", { name: "edge" }))));
    }
    static get is() { return "se-tabbar"; }
    static get originalStyleUrls() { return {
        "$": ["tabbar.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["tabbar.css"]
    }; }
    static get properties() { return {
        "option": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"nav\" | \"content\"",
                "resolved": "\"content\" | \"nav\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Defines the function of the tabbar.\nDefault `nav` creates a tab bar that functions as a nav-bar.\n`content` creates a ta bbar that functions as a content section tab bar."
            },
            "attribute": "option",
            "reflect": false,
            "defaultValue": "\"nav\""
        },
        "overflow": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"compact\" | \"stack\" | \"scroll\"",
                "resolved": "\"compact\" | \"scroll\" | \"stack\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Indicates the overflow behavior of your tab bar.\nDefault setting is `scroll`, keeping all tabs in one horizontal row.\nThe `stack` setting allows your tabbar content wrap to new lines.\nThe `compact` setting allows your tabbar content to scroll, but all stack the text together as much as possible."
            },
            "attribute": "overflow",
            "reflect": false,
            "defaultValue": "\"scroll\""
        },
        "color": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'primary' | 'alternative'",
                "resolved": "\"alternative\" | \"primary\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Indicates the color of your tab bar.\nDefault setting is `primary`, rendering a green background for nav-bars and ultra-light-grey-1 for content.\nThe `alternative` setting renders a white background."
            },
            "attribute": "color",
            "reflect": false,
            "defaultValue": "'primary'"
        }
    }; }
}
