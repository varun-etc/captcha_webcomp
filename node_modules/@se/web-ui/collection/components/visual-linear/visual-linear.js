import { Component, h, Host, Prop, Watch, State } from "@stencil/core";
export class VisualLinearComponent {
    constructor() {
        /**
         * Defines the layout of your component.
         * `inline` is the default option.  This sets the "progress bar" adjacent to the label.
         * `stacked` option will render the "progress bar" below the label.
         */
        this.option = 'inline';
        /**
         * Sets the color of the visual "progress bar".
         * The string should be a 6-digit hexadecimal color with a hashtag (example: #3dcd58).
         * By default, the progress bar will have a green color.
         */
        this.secolor = 'primary';
        this.isHexColor = false;
    }
    colorDidChange() {
        this.isHexColor = (this.secolor && this.secolor.indexOf('#') !== -1) ? true : false;
    }
    componentDidLoad() {
        this.colorDidChange();
    }
    render() {
        return (h(Host, { class: !this.isHexColor ? `color-${this.secolor}` : '' },
            h("div", { class: ["se-visual-linear", this.option].join(' ') },
                h("svg", { height: "8" },
                    h("rect", { class: "progress-bar-wrapper", width: "100%", height: "8" }),
                    h("rect", { class: "progress-bar", width: this.percentage + '%', height: "8", style: { fill: this.isHexColor ? this.secolor : 'currentColor' } }),
                    "Sorry, your browser does not support inline SVG."),
                h("text", null,
                    this.value ? h("tspan", { class: "linear-value" }, this.value) : '',
                    h("tspan", { x: "100%", class: "linear-label" }, this.label)))));
    }
    static get is() { return "se-visual-linear"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["visual-linear.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["visual-linear.css"]
    }; }
    static get properties() { return {
        "option": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'inline' | 'stacked'",
                "resolved": "\"inline\" | \"stacked\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Defines the layout of your component.\n`inline` is the default option.  This sets the \"progress bar\" adjacent to the label.\n`stacked` option will render the \"progress bar\" below the label."
            },
            "attribute": "option",
            "reflect": false,
            "defaultValue": "'inline'"
        },
        "label": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Defines the text value of the label in your component."
            },
            "attribute": "label",
            "reflect": false
        },
        "value": {
            "type": "string",
            "mutable": true,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Defines the value of your component."
            },
            "attribute": "value",
            "reflect": false
        },
        "secolor": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Sets the color of the visual \"progress bar\".\nThe string should be a 6-digit hexadecimal color with a hashtag (example: #3dcd58).\nBy default, the progress bar will have a green color."
            },
            "attribute": "secolor",
            "reflect": false,
            "defaultValue": "'primary'"
        },
        "percentage": {
            "type": "number",
            "mutable": true,
            "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Set the percentage of the \"progress bar\" to be \"filled\"."
            },
            "attribute": "percentage",
            "reflect": false
        }
    }; }
    static get states() { return {
        "isHexColor": {}
    }; }
    static get watchers() { return [{
            "propName": "secolor",
            "methodName": "colorDidChange"
        }]; }
}
