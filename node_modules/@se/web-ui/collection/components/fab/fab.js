import { Component, h, Prop, State, Method } from '@stencil/core';
import notificationError from "@se/icons/svg/notification_error.svg";
import arrow4Top from "@se/icons/svg/arrow4_top.svg";
const SHOW_FAB = 'show';
export class FabComponent {
    constructor() {
        this.error_icon = notificationError;
        this.arrow_up = arrow4Top;
        /**
         * Property that determines the functionality of the FAB.
         * The default setting is `speeddial`, which will show/hide a dropdown menu when clicking on the FAB.
         * The `backtotop` setting returns you to the top of the page you are viewing when clicking on the FAB.
         */
        this.option = 'speeddial';
        /**
         *  Property that determines the position of the component.
         *  The default setting is `bottom`, rendering a FAB at the bottom right corner.
         *  The `top` setting renders the FAB at the top right corner.
         */
        this.position = 'bottom';
        /**
        * Indicates the color of your main action button .
        * The Default setting is `primary`, rendering a green background.
        * The `alternative` setting renders a white background.
        */
        this.color = 'primary';
        this.toggleIcon = true;
    }
    /**
     * Use this method to toggle (show/hide) the mini action buttons.
     */
    async toggleAction() {
        if (this.option == 'speeddial') {
            this.toggleIcon = !this.toggleIcon;
        }
    }
    getIcon() {
        let icon;
        switch (this.option) {
            case 'speeddial':
                icon = this.toggleIcon ? this.icon : this.error_icon;
                break;
            case 'backtotop':
                icon = this.arrow_up;
            default:
                break;
        }
        return icon;
    }
    render() {
        return (h("div", { class: ['se-fab', `pos-${this.position}`].join(' ') },
            h("se-button", { color: this.color, "icon-only": "true", class: this.option == 'backtotop' ? 'backtotop' : '', option: 'fab', onClick: () => this.toggleAction() },
                h("se-icon", { slot: "icon", size: "medium" },
                    h("span", { innerHTML: this.getIcon() }))),
            this.option === 'speeddial' ?
                h("div", { class: ['mini-action-button', !this.toggleIcon ? SHOW_FAB : ''].join(' ') },
                    h("slot", null)) : ''));
    }
    static get is() { return "se-fab"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["fab.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["fab.css"]
    }; }
    static get properties() { return {
        "icon": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Property that determines if an icon is included in the main action button."
            },
            "attribute": "icon",
            "reflect": false
        },
        "option": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'speeddial' | 'backtotop'",
                "resolved": "\"backtotop\" | \"speeddial\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Property that determines the functionality of the FAB.\nThe default setting is `speeddial`, which will show/hide a dropdown menu when clicking on the FAB.\nThe `backtotop` setting returns you to the top of the page you are viewing when clicking on the FAB."
            },
            "attribute": "option",
            "reflect": false,
            "defaultValue": "'speeddial'"
        },
        "position": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'bottom' | 'top'",
                "resolved": "\"bottom\" | \"top\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Property that determines the position of the component.\nThe default setting is `bottom`, rendering a FAB at the bottom right corner.\nThe `top` setting renders the FAB at the top right corner."
            },
            "attribute": "position",
            "reflect": false,
            "defaultValue": "'bottom'"
        },
        "color": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "'primary' | 'alternative'",
                "resolved": "\"alternative\" | \"primary\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Indicates the color of your main action button .\nThe Default setting is `primary`, rendering a green background.\nThe `alternative` setting renders a white background."
            },
            "attribute": "color",
            "reflect": false,
            "defaultValue": "'primary'"
        }
    }; }
    static get states() { return {
        "toggleIcon": {}
    }; }
    static get methods() { return {
        "toggleAction": {
            "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                    "Promise": {
                        "location": "global"
                    }
                },
                "return": "Promise<void>"
            },
            "docs": {
                "text": "Use this method to toggle (show/hide) the mini action buttons.",
                "tags": []
            }
        }
    }; }
}
