import { EventEmitter } from "../../stencil-public-runtime";
export declare class CheckboxComponent {
    /**
     * Determines the visual appearance of the component.
     * `checkbox` is the default option, which will render the component like a standard HTML checkbox.
     * `switch` renders the component like a toggle switch.
     * `onoff` renders the component like an "on/off" switch, with a red "off" button and a green "on" button.
     */
    option: 'checkbox' | 'onoff' | 'switch';
    /**
     * The value you want to pass to the parent component when the checkbox is checked.
     */
    value: string;
    /**
     * The label of the checkbox that will be attached to the box.
     */
    label: string;
    /**
     * Adds a red asterisk if the checkbox is required when used in a form field.  Default is `false`.
     */
    required: boolean;
    /**
     * Defines the color of the checkbox for when the option is set to `checkbox` or `switch`.
     * The default value is `success`, rendering a green color.
     * The `secondary` setting renders a blue color.
     */
    color: 'primary' | 'secondary' | 'success';
    /**
     * Defines the color schema of the checkbox when the option is set to `onoff`.
     * The default value is `standard`.
     */
    background: 'standard' | 'alternative';
    /**
     * Optional property that defines if the checkbox is disabled.  Set to `false` by default.
     */
    disabled: boolean;
    /**
       * The "checked" state of the checkbox, `false` by default.
       */
    selected: boolean;
    /**
     * Defines the text the user will see for the "on" or "active" part of the checkbox when option is set to `onoff`.  Set to `ON` by default.
     */
    textOn: string;
    /**
     * Defines the text the user will see for the "off" or "inactive" part of the checkbox when option is set to `onoff`.  Set to `OFF` by default.
     */
    textOff: string;
    /**
     * Reduces the visual height of the checkbox when the option is set to `onoff`.
     * Useful if the on/off checkbox is within a header element.
     */
    header: boolean;
    /**
     * Sets the position of the label for your checkbox component.
     * The default setting is `right` when the option is set to `checkbox`.
     * The default setting is `left` when the option is set to `switch`.
     */
    labelPos: 'left' | 'right';
    /**
     * Sets the required property on the checkbox element.  Used when the checkbox is within a form field.
     */
    setRequired(): Promise<void>;
    /**
     * Send the checkbox value to the parent component when clicking on the checkbox.
     */
    didChange: EventEmitter;
    el: HTMLElement;
    setElementId(): void;
    handleClick(): void;
    componentDidLoad(): void;
    render(): any;
}
