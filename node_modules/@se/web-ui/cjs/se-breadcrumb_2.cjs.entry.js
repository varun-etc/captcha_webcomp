'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-fec6655d.js');
const arrow2_right = require('./arrow2_right-73037961.js');

const breadcrumbCss = ":host{display:-ms-flexbox;display:flex;cursor:pointer}:host ol{margin:0;padding:0}";

const BreadcrumbComponent = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.items = [];
    }
    updateLastItem() {
        this.items = Array.from(this.el.querySelectorAll('se-breadcrumb-item'));
        this.items.forEach((item) => {
            item.isLast = (item === this.items[this.items.length - 1]);
        });
    }
    watchItemList() {
        this.observer = new MutationObserver((mutations) => {
            mutations.forEach((mutation) => {
                if (mutation.addedNodes.length || mutation.removedNodes.length) {
                    this.updateLastItem();
                }
            });
        });
        this.observer.observe(this.el, { childList: true });
    }
    componentWillLoad() {
        this.updateLastItem();
        this.watchItemList();
    }
    componentDidUnload() {
        this.observer.disconnect();
    }
    render() {
        return (index.h("nav", { "aria-label": "breadcrumb" }, index.h("ol", null, index.h("slot", null))));
    }
    get el() { return index.getElement(this); }
};
BreadcrumbComponent.style = breadcrumbCss;

const breadcrumbItemCss = ":host div{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center}:host .breadcrumb-item{display:inline;color:#333333;font-size:14px;line-height:14px;padding-right:4px;vertical-align:super}:host .breadcrumb-item:hover{text-decoration:underline}:host a{color:inherit;text-decoration:inherit;cursor:inherit}:host se-icon{cursor:default}:host se-icon:active,:host se-icon:focus{color:inherit;background-color:inherit}:host .selected .breadcrumb-item{cursor:default;text-decoration:none;color:#CBCBCB}";

const BreadcrumbItemComponent = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        /**
         * Indicates whether or not the breadcrumb item should be selected.  The default setting is `false`.
         */
        this.isLast = false;
    }
    render() {
        return (index.h(index.Host, { role: "listitem" }, index.h("div", { class: { 'selected': this.isLast } }, this.isLast ?
            index.h("span", { "aria-current": 'page', class: "breadcrumb-item" }, index.h("slot", null))
            :
                [index.h("span", { class: "breadcrumb-item" }, index.h("a", { href: this.href }, index.h("slot", null))),
                    index.h("se-icon", { size: "small" }, index.h("span", { innerHTML: arrow2_right.arrow2_right }))])));
    }
};
BreadcrumbItemComponent.style = breadcrumbItemCss;

exports.se_breadcrumb = BreadcrumbComponent;
exports.se_breadcrumb_item = BreadcrumbItemComponent;
