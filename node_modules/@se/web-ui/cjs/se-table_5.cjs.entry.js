'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-fec6655d.js');
const arrow4_top = require('./arrow4_top-2fe51b6d.js');

const tableCss = ":host{position:absolute;top:0;bottom:0;left:0;right:0;overflow:auto;width:100%}.table-rows-wrapper{width:100%;position:relative}::slotted(se-table-group.selectable:hover){background-color:#CBCBCB;background-color:var(--se-hover-standard, #CBCBCB);color:#0F0F0F;color:var(--se-hover-standard-contrast, #0F0F0F)}::slotted(se-table-group.selected){background-color:#626469;background-color:var(--se-selected, #626469);color:#FFFFFF;color:var(--se-selected-contrast, #FFFFFF)}";

const TableComponent = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
    }
    render() {
        return index.h(index.Host, { role: "table" }, index.h("div", { class: "table-rows-wrapper" }, index.h("slot", { name: "start" }), index.h("slot", null)));
    }
};
TableComponent.style = tableCss;

const tableGroupCss = ":host{background-color:#FFFFFF;background-color:var(--se-alternative, #FFFFFF);display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;min-width:100%;margin:0;padding:0;-webkit-transition:0.2s;transition:0.2s;border-bottom:1px solid #E6E6E6}.table-group-row{display:-ms-flexbox;display:flex;-ms-flex-flow:row;flex-flow:row}::slotted(*[slot=detail]){background-color:#EDEDED;background-color:var(--se-standard, #EDEDED);color:#0F0F0F;color:var(--se-standard-contrast, #0F0F0F);width:100%}";

const TableGroupComponent = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        /**
         * Indicates whether or not the `se-table-group` is selectable.  Set to `false` by default.
         */
        this.selectable = false;
        /**
         * Indicates whether or not the `se-table-group` is selected.  Set to `false` by default.
         */
        this.selected = false;
    }
    setButtonId() {
        this.innerId = this.el.getAttribute('id') || '';
    }
    componentWillLoad() {
        this.setButtonId();
    }
    render() {
        return (index.h(index.Host, { role: "row", class: { selectable: this.selectable, selected: this.selected } }, index.h("div", { class: "table-group-row", id: `wc-${this.innerId}` }, index.h("slot", null)), index.h("slot", { name: "detail" })));
    }
    get el() { return index.getElement(this); }
};
TableGroupComponent.style = tableGroupCss;

const tableGroupHeaderCss = ":host{margin:0;padding:0;display:-ms-flexbox;display:flex;position:-webkit-sticky;position:sticky;top:0;left:0;display:-ms-inline-flexbox;display:inline-flex;min-width:100%;z-index:2;background-color:#FFFFFF;background-color:var(--se-alternative, #FFFFFF)}";

const TableGroupHeaderComponent = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
    }
    render() {
        return (index.h(index.Host, { role: "row", slot: "start" }, index.h("slot", null)));
    }
    get el() { return index.getElement(this); }
};
TableGroupHeaderComponent.style = tableGroupHeaderCss;

const tableItemCss = ":host{margin:0;-ms-flex-positive:1;flex-grow:1;-ms-flex-negative:1;flex-shrink:1;-ms-flex-preferred-size:0px;flex-basis:0px;width:0;min-width:58px;max-width:100%;font-weight:lighter}.table-item-content{overflow:hidden;background:none;-webkit-box-sizing:border-box;box-sizing:border-box;border:none;min-height:47px;height:20px;margin:0;padding:0 16px;font-weight:300;font-size:16px;position:relative;outline:none;width:100%;max-width:100%;color:inherit;font:inherit;display:-ms-flexbox;display:flex;-moz-align-items:center;-ms-flex-align:center;align-items:center;text-align:left;text-align:start;text-decoration:none}.table-item-label{width:100%;line-height:24px}div{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host(.opt-dropdown) .table-item-content{overflow:unset}:host(.opt-dropdown) .table-item-content .table-item-label{overflow:unset}";

const TableItemComponent = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.option = 'text';
        /**
         * Optional property defines the tag type within the `se-table-item`.
         * Default value `false` defines the tag type as `div`.
         * `true` defines the tag type as a `button`.
         */
        this.clickable = false;
    }
    render() {
        const displayStyle = {
            flex: this.flex || '',
            maxWidth: this.width || '',
            width: this.width || '',
            minWidth: this.minWidth || ''
        };
        return (index.h(index.Host, { role: "cell", class: ["se-table-item", `opt-${this.option}`].join(' '), style: displayStyle }, index.h("div", { class: "table-item-content" }, index.h("div", { class: "table-item-label" }, index.h("slot", null)))));
    }
    get el() { return index.getElement(this); }
};
TableItemComponent.style = tableItemCss;

const tableItemHeaderCss = ":host{margin:0;-ms-flex-positive:1;flex-grow:1;-ms-flex-negative:1;flex-shrink:1;-ms-flex-preferred-size:0px;flex-basis:0px;width:0;min-width:58px;max-width:100%;font-weight:lighter}.table-item-content{overflow:hidden;background:none;-webkit-box-sizing:border-box;box-sizing:border-box;border:none;min-height:47px;height:20px;margin:0;padding:0 16px;font-weight:300;font-size:16px;position:relative;outline:none;width:100%;max-width:100%;color:inherit;font:inherit;display:-ms-flexbox;display:flex;-moz-align-items:center;-ms-flex-align:center;align-items:center;text-align:left;text-align:start;text-decoration:none}.table-item-label{width:100%;line-height:24px}div{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host(.opt-dropdown) .table-item-content{overflow:unset}:host(.opt-dropdown) .table-item-content .table-item-label{overflow:unset}:host{font-weight:500;border:1px solid #E6E6E6;border-right:none}:host(:first-child){border-left:none}:host(:not(:first-child)){margin-left:-1px}.table-item-content{-ms-flex-pack:justify;justify-content:space-between}button:hover{cursor:pointer}se-icon{-webkit-transition:0.3s;transition:0.3s}se-icon.sort-desc{-webkit-transform:rotate(180deg);transform:rotate(180deg)}se-icon.sortable{margin-left:calc(8px * 1.375)}";

const TableItemHeaderComponent = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
    }
    setButtonId() {
        const id = this.el.getAttribute('id');
        if (id) {
            this.innerId = `wc-${id}`;
        }
    }
    componentWillLoad() {
        this.setButtonId();
    }
    render() {
        let ariaLabelSort;
        let disabled = false;
        const isSortable = !!this.sort;
        const displayStyle = {
            flex: this.flex || '',
            maxWidth: this.width || '',
            width: this.width || '',
            minWidth: this.minWidth || ''
        };
        if (isSortable) {
            this.clickable = true;
            if (this.sort === "asc") {
                ariaLabelSort = "sort asc";
            }
            else if (this.sort === "desc") {
                ariaLabelSort = "sort desc";
            }
            else {
                disabled = true;
            }
        }
        else {
            ariaLabelSort = null;
        }
        const TagType = this.clickable || isSortable ? 'button' : 'div';
        return (index.h(index.Host, { role: "cell", class: ["se-table-item", isSortable ? `sort-${this.sort}` : ''].join(' '), id: this.innerId, style: displayStyle }, index.h(TagType, { class: "table-item-content", "aria-label": ariaLabelSort }, index.h("div", { class: "table-item-label" }, index.h("slot", null)), isSortable ?
            index.h("se-icon", { class: ["sortable", isSortable ? `sort-${this.sort}` : ''].join(' '), "aria-hidden": "true", size: "nano", style: { opacity: disabled ? '.3' : '1' } }, index.h("span", { innerHTML: arrow4_top.arrow4Top })) : '')));
    }
    get el() { return index.getElement(this); }
};
TableItemHeaderComponent.style = tableItemHeaderCss;

exports.se_table = TableComponent;
exports.se_table_group = TableGroupComponent;
exports.se_table_group_header = TableGroupHeaderComponent;
exports.se_table_item = TableItemComponent;
exports.se_table_item_header = TableItemHeaderComponent;
