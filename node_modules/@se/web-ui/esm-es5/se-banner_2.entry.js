import { r as registerInstance, h, g as getElement, c as createEvent, H as Host } from './index-8c7316b3.js';
import { a as arrow2_right } from './arrow2_right-4a0b22c1.js';
var arrow2_left = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 23.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 1024 1024\" style=\"enable-background:new 0 0 1024 1024;\" xml:space=\"preserve\">\n<path d=\"M561.8,366.5c8-8,22-8,30,0c4,4,6,10,6,15c0,6-2,11-6,15l-115,115l115,116c4,4,6,9,6,15c0,5-2,11-6,15c-8,8-22,8-30,0\n\tl-130-130c-8-9-8-22,0-31L561.8,366.5z\"/>\n</svg>\n";
var bannerCss = ".banner-items{display:-ms-flexbox;display:flex;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row;position:relative;-webkit-transition:right 0.5s;transition:right 0.5s}.banner-indicators{position:absolute;left:0;right:0;top:90px;margin:0;padding-left:0;-ms-flex-pack:center;justify-content:center;display:-ms-inline-flexbox;display:inline-flex;list-style:none;z-index:2}.banner-indicators li{width:5px;height:5px;border-radius:50%;background-color:#FFFFFF;opacity:0.7;margin-right:5px}.banner-indicators li.active{background-color:#3DCD58;opacity:1}.banner-indicators li.small-indicator{width:3px;height:3px;margin-top:1px}.previous-indicator,.next-indicator{display:-ms-flexbox;display:flex;position:absolute;top:45px;font-family:\"se-icon\";cursor:pointer;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;text-decoration:none;z-index:3;color:#9FA0A4}.previous-indicator:hover,.next-indicator:hover{color:#FFFFFF}.se-banner{position:relative;padding-top:15px;width:100%;margin:0;overflow:hidden}.previous-indicator{left:-5px}.next-indicator{right:-5px}@media screen and (min-width: 768px){.banner-indicators{top:345px}.previous-indicator,.next-indicator{top:165px}}@media screen and (min-width: 900px){.se-banner{height:350px}}@media screen and (min-width: 1281px){.banner-indicators{top:340px}.previous-indicator,.next-indicator{top:160px}}";
var BannerComponent = /** @class */ (function () {
    function BannerComponent(hostRef) {
        registerInstance(this, hostRef);
        /**
         * Set the duration (in ms) that the banner will automatically switch slides.
         * Default is `6000`.
         */
        this.duration = 6000;
        this.items = [];
    }
    BannerComponent.prototype.handleTouchStart = function (event) {
        clearInterval(this.interval);
        this.xStart = event.touches[0].clientX;
    };
    BannerComponent.prototype.handleTouchMove = function (event) {
        this.xEnd = event.touches[0].clientX;
        var xDiff = this.xStart - this.xEnd;
        if (xDiff > 0) {
            this.changeActive('next');
        }
        else {
            this.changeActive('previous');
        }
    };
    BannerComponent.prototype.windowSizeDidChange = function () {
        this.setIconSize();
    };
    BannerComponent.prototype.setActiveItem = function (item) {
        var _this = this;
        if (this.items.length) {
            this.items.forEach(function (item) {
                item.active = false;
                item.isThreeAway = false;
                item.isFourAway = false;
            });
            item.active = true;
            this.activeIndex = this.items.indexOf(item);
            this.items.forEach(function (item) {
                var diff = Math.abs(_this.items.indexOf(item) - _this.activeIndex);
                if (diff == 3) {
                    item.isThreeAway = true;
                }
            });
            this.assignSelectedItem(item);
        }
    };
    BannerComponent.prototype.assignSelectedItem = function (item) {
        this.xStart = undefined;
        this.xEnd = undefined;
        this.selectedItem = item;
        this.selectedItemIndex = this.items.indexOf(item);
        this.bannerIndicatorEl.style.right = '' + this.selectedItemIndex * 100 + '%';
        this.setInterval();
    };
    BannerComponent.prototype.changeActive = function (index) {
        // reset timer to rotate when clicking on arrow button
        clearInterval(this.interval);
        var item;
        if (index === 'previous') {
            item = this.items[this.selectedItemIndex - 1] || this.items[this.items.length - 1];
        }
        if (index === 'next') {
            item = this.items[this.selectedItemIndex + 1] || this.items[0];
        }
        this.setActiveItem(item);
    };
    BannerComponent.prototype.setInterval = function () {
        var _this = this;
        if (this.duration > 500) {
            this.interval = setInterval(function () {
                // Rotate carousel to the right based on the specified duration.
                // Must be greater than 500ms, as it takes that amount of time to switch slides.
                _this.changeActive('next');
            }, this.duration);
        }
    };
    BannerComponent.prototype.watchItemList = function () {
        var _this = this;
        this.observer = new MutationObserver(function (mutations) {
            mutations.forEach(function (mutation) {
                if (mutation.addedNodes.length) {
                    clearInterval(_this.interval);
                    _this.setBannerItemWidth();
                    _this.setInterval();
                }
                if (mutation.removedNodes.length) {
                    clearInterval(_this.interval);
                    _this.setBannerItemWidth();
                    _this.setActiveItem(_this.items[0]);
                }
            });
        });
        this.observer.observe(this.el, { childList: true });
    };
    BannerComponent.prototype.renderList = function () {
        return this.items.map(function (item) {
            return [
                h("li", { class: { 'active': item.active, 'small-indicator': item.isThreeAway, 'hide': item.isFourAway } }),
            ];
        });
    };
    BannerComponent.prototype.setBannerItemWidth = function () {
        var _this = this;
        this.items = Array.from(this.el.querySelectorAll('se-banner-item'));
        if (this.items.length) {
            this.items.forEach(function (item) {
                item.style.width = '' + 100 / _this.items.length + '%';
            });
        }
    };
    BannerComponent.prototype.setIconSize = function () {
        var icons = Array.from(this.el.shadowRoot.querySelectorAll('se-icon'));
        icons.forEach(function (icon) {
            if (window.innerWidth > 1280) {
                icon.size = 'xlarge';
            }
            else if (window.innerWidth > 767) {
                icon.size = 'large';
            }
            else {
                icon.size = 'medium';
            }
        });
    };
    BannerComponent.prototype.componentWillLoad = function () {
        this.watchItemList();
    };
    BannerComponent.prototype.componentDidLoad = function () {
        this.setBannerItemWidth();
        this.setActiveItem(this.items[0]);
        this.setIconSize();
    };
    BannerComponent.prototype.componentDidUpdate = function () {
        this.setIconSize();
    };
    ;
    BannerComponent.prototype.componentDidUnload = function () {
        clearInterval(this.interval);
        this.items.length = 0;
        this.selectedItem = undefined;
        this.selectedItemIndex = undefined;
    };
    BannerComponent.prototype.render = function () {
        var _this = this;
        return [
            h("div", { class: "se-banner" }, h("div", { class: "banner-items", ref: function (el) { return _this.bannerIndicatorEl = el; }, style: { width: '' + this.items.length * 100 + '%' } }, h("slot", null)), this.items.length > 1 ? [
                h("ol", { class: "banner-indicators" }, this.renderList()),
                h("se-icon", { class: "previous-indicator", onClick: function () { return _this.changeActive('previous'); } }, h("span", { innerHTML: arrow2_left })),
                h("se-icon", { class: "next-indicator", onClick: function () { return _this.changeActive('next'); } }, h("span", { innerHTML: arrow2_right }))
            ]
                : '')
        ];
    };
    Object.defineProperty(BannerComponent.prototype, "el", {
        get: function () { return getElement(this); },
        enumerable: true,
        configurable: true
    });
    return BannerComponent;
}());
BannerComponent.style = bannerCss;
var bannerItemCss = "@-webkit-keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@-webkit-keyframes fadeOut{from{opacity:1}to{opacity:0}}@keyframes fadeOut{from{opacity:1}to{opacity:0}}@-webkit-keyframes slideInLeft{from{-webkit-transform:translate3d(-100%, 0, 0);transform:translate3d(-100%, 0, 0);visibility:visible}to{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}}@keyframes slideInLeft{from{-webkit-transform:translate3d(-100%, 0, 0);transform:translate3d(-100%, 0, 0);visibility:visible}to{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}}@-webkit-keyframes slideOutLeft{from{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);visibility:visible}to{-webkit-transform:translate3d(-100%, 0, 0);transform:translate3d(-100%, 0, 0)}}@keyframes slideOutLeft{from{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);visibility:visible}to{-webkit-transform:translate3d(-100%, 0, 0);transform:translate3d(-100%, 0, 0)}}@-webkit-keyframes slideCollapseDown{from{-webkit-transform:scaleY(0);transform:scaleY(0);visibility:visible}to{-webkit-transform:scaleY(1);transform:scaleY(1)}}@keyframes slideCollapseDown{from{-webkit-transform:scaleY(0);transform:scaleY(0);visibility:visible}to{-webkit-transform:scaleY(1);transform:scaleY(1)}}@-webkit-keyframes slideCollapseUp{from{-webkit-transform:scaleY(1);transform:scaleY(1)}to{-webkit-transform:scaleY(0);transform:scaleY(0)}}@keyframes slideCollapseUp{from{-webkit-transform:scaleY(1);transform:scaleY(1)}to{-webkit-transform:scaleY(0);transform:scaleY(0)}}:host{height:100%;position:relative}:host(.active){display:block;left:0;right:0}:host(.active) .banner-section-wrapper{opacity:1}.banner-section-wrapper{opacity:0;display:-ms-flexbox;display:flex;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:start;justify-content:flex-start;z-index:2}.image-container{width:100%;position:relative;height:85px;overflow:hidden;transform:translate3d(0, 0, 0);-webkit-transform:translate3d(0, 0, 0)}.image-background{position:absolute;width:100%;height:85px;left:0;top:0;background-position:center, center;background-repeat:no-repeat;background-origin:content-box;background-size:cover}.background-overlay{position:absolute;top:0;bottom:0;left:0;right:0;width:100%;height:100%;background-image:-webkit-gradient(linear, right top, left top, from(rgba(98, 100, 105, 0)), to(rgba(0, 0, 0, 0.8)));background-image:linear-gradient(270deg, rgba(98, 100, 105, 0) 0%, rgba(0, 0, 0, 0.8) 100%)}@media screen and (min-width: 768px){.image-container,.image-background{height:350px}}@media screen and (min-width: 900px){.image-container{position:absolute;top:0;bottom:0;left:0;right:0}.banner-section-wrapper{padding:50px 95px;height:250px}::slotted(se-block){width:40% !important;min-width:330px}::slotted(se-block.block-bg-none){color:#FFFFFF}}";
var BannerItemComponent = /** @class */ (function () {
    function BannerItemComponent(hostRef) {
        registerInstance(this, hostRef);
        /**
         * Indicates the active banner item in your banner component.
         */
        this.active = false;
        this.didChange = createEvent(this, "didChange", 7);
    }
    BannerItemComponent.prototype.activeDidChange = function () {
        if (this.active) {
            this.didChange.emit();
        }
    };
    BannerItemComponent.prototype.setBlockTransparency = function () {
        Array.from(this.el.querySelectorAll('se-block')).forEach(function (item) {
            item.classList.add('banner-child');
        });
    };
    BannerItemComponent.prototype.setButtonClass = function () {
        Array.from(this.el.querySelectorAll('se-button')).forEach(function (item) {
            item.classList.add('banner-child');
        });
    };
    BannerItemComponent.prototype.componentWillLoad = function () {
        this.setBlockTransparency();
        this.setButtonClass();
    };
    BannerItemComponent.prototype.componentWillUpdate = function () {
        this.setBlockTransparency();
        this.setButtonClass();
    };
    BannerItemComponent.prototype.render = function () {
        return (h(Host, { class: { 'active': this.active } }, h("div", { class: "image-container" }, h("div", { class: "image-background", style: { backgroundImage: this.imageUrl } }), h("div", { class: "background-overlay" })), h("div", { class: "banner-section-wrapper" }, h("slot", null))));
    };
    Object.defineProperty(BannerItemComponent.prototype, "el", {
        get: function () { return getElement(this); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BannerItemComponent, "watchers", {
        get: function () {
            return {
                "active": ["activeDidChange"]
            };
        },
        enumerable: true,
        configurable: true
    });
    return BannerItemComponent;
}());
BannerItemComponent.style = bannerItemCss;
export { BannerComponent as se_banner, BannerItemComponent as se_banner_item };
