var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { r as registerInstance, c as createEvent, h, g as getElement } from './index-8c7316b3.js';
var tooltipCss = ":host{position:relative;display:inline-block}:host .tooltip{color:#FFFFFF;color:var(--se-alternative, #FFFFFF);background-color:#42B4E6;background-color:var(--se-secondary, #42B4E6);max-width:260px;width:-moz-max-content;width:-webkit-max-content;width:max-content;visibility:hidden;position:absolute;padding:8px 8px;font-size:12px;display:inline-table;line-height:14px;z-index:-1;border-radius:2px px;-webkit-box-shadow:1px 1px 4px 0 rgba(0, 0, 0, 0.3);box-shadow:1px 1px 4px 0 rgba(0, 0, 0, 0.3);opacity:0;-webkit-transition:0.2s;transition:0.2s}:host .tooltip::after{content:\"\";position:absolute;border:5px solid}:host .tooltip.show{opacity:1;visibility:visible;z-index:10}:host .tooltip-top .tooltip{margin-bottom:8px;bottom:100%;left:50%;transform:translateX(-50%) translateY(0%);-webkit-transform:translateX(-50%) translateY(0%);-moz-transform:translateX(-50%) translateY(0%);-ms-transform:translateX(-50%) translateY(0%);-o-transform:translateX(-50%) translateY(0%)}:host .tooltip-top .tooltip::after{top:100%;left:50%;margin-left:-5px;border-color:#42B4E6 transparent transparent transparent;border-color:var(--se-secondary, #42B4E6) transparent transparent transparent}:host .tooltip-bottom .tooltip{margin-top:8px;top:100%;left:50%;transform:translateX(-50%) translateY(0%);-webkit-transform:translateX(-50%) translateY(0%);-moz-transform:translateX(-50%) translateY(0%);-ms-transform:translateX(-50%) translateY(0%);-o-transform:translateX(-50%) translateY(0%)}:host .tooltip-bottom .tooltip::after{bottom:100%;left:50%;margin-left:-5px;border-color:transparent transparent #42B4E6 transparent;border-color:transparent transparent var(--se-secondary, #42B4E6) transparent}:host .tooltip-left .tooltip{left:-8px;top:50%;transform:translateX(-100%) translateY(-50%);-webkit-transform:translateX(-100%) translateY(-50%);-moz-transform:translateX(-100%) translateY(-50%);-ms-transform:translateX(-100%) translateY(-50%);-o-transform:translateX(-100%) translateY(-50%)}:host .tooltip-left .tooltip::after{top:50%;left:100%;margin-top:-5px;border-color:transparent transparent transparent #42B4E6;border-color:transparent transparent transparent var(--se-secondary, #42B4E6)}:host .tooltip-right .tooltip{margin-left:8px;left:100%;top:50%;transform:translateX(0%) translateY(-50%);-webkit-transform:translateX(0%) translateY(-50%);-moz-transform:translateX(0%) translateY(-50%);-ms-transform:translateX(0%) translateY(-50%);-o-transform:translateX(0%) translateY(-50%)}:host .tooltip-right .tooltip::after{top:50%;right:100%;margin-top:-5px;border-color:transparent #42B4E6 transparent transparent;border-color:transparent var(--se-secondary, #42B4E6) transparent transparent}:host([hidden]){display:none}.tooltip-fab .tooltip,.tooltip-fab-top .tooltip{position:fixed}.tooltip-fab.tooltip-top .tooltip,.tooltip-fab.tooltip-left .tooltip{top:auto;left:auto;-webkit-transform:none;transform:none}.tooltip-fab.tooltip-left .tooltip{right:104px;bottom:calc((56px / 2) + 16px);-webkit-transform:translateY(50%);transform:translateY(50%)}.tooltip-fab.tooltip-top .tooltip{right:16px;bottom:72px;min-width:80px}.tooltip-fab-top.tooltip-top .tooltip,.tooltip-fab-top.tooltip-left .tooltip,.tooltip-fab-top.tooltip-bottom .tooltip{left:auto;-webkit-transform:none;transform:none}.tooltip-fab-top.tooltip-left .tooltip{top:calc(-100vh + 64px + 48px);right:104px;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.tooltip-fab-top.tooltip-top .tooltip{top:auto;right:16px;bottom:calc(100vh - 64px - 16px);min-width:80px}.tooltip-fab-top.tooltip-bottom .tooltip{top:calc(-100vh + 64px + 24px + 56px);right:16px;min-width:80px}";
var TooltipComponent = /** @class */ (function () {
    function class_1(hostRef) {
        registerInstance(this, hostRef);
        /**
         * Indicates the position of your tooltip.
         * The default setting is `bottom`, rendering the tooltip below its parent.
         */
        this.position = "bottom";
        /**
         * Indicates the action of your tooltip.
         * The default setting is `hover`, triggering the tooltip when hovering over the parent element.
         * The `click` action triggers the tooltip when you click on the parent element.
         */
        this.action = "hover";
        this.opened = false;
        this.didOpen = createEvent(this, "didOpen", 7);
        this.didClose = createEvent(this, "didClose", 7);
        this.closeTooltips = createEvent(this, "closeTooltips", 7);
    }
    /**
     * Method to open the tooltip separate from hovering or clicking the parent element.
     */
    class_1.prototype.open = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.opened = true;
                return [2 /*return*/];
            });
        });
    };
    /**
     * Method to close the tooltip separate from hovering or clicking the parent element.
     */
    class_1.prototype.close = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.opened = false;
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.handleTouchstart = function (ev) {
        this._toggle(ev);
    };
    class_1.prototype.handleTouchEnd = function (ev) {
        this._toggle(ev);
    };
    class_1.prototype.handleMouseOver = function (ev) {
        if (this.action === "hover") {
            this._toggle(ev);
        }
    };
    class_1.prototype.handleMouseLeave = function (ev) {
        if (this.action === "hover" && this.opened) {
            this._toggle(ev);
        }
    };
    class_1.prototype.handleMouseClick = function (ev) {
        if (this.action === "click" && this.opened) {
            this._toggle(ev);
        }
    };
    class_1.prototype.handleCloseTooltip = function () {
        this.close();
    };
    class_1.prototype._toggle = function (ev) {
        ev.stopPropagation();
        if (this.opened) {
            this.close();
            this.didClose.emit(ev);
        }
        else {
            this.closeTooltips.emit(); // close other tooltips before opening target tooltip
            this.open();
            this.didOpen.emit(ev);
        }
    };
    class_1.prototype.render = function () {
        var _this = this;
        var containsFab = this.el.querySelector("se-fab");
        var tooltipPosition = this.el.getAttribute("position");
        if (!!this.el.shadowRoot.querySelector("div .tooltip") && containsFab && containsFab.getAttribute("position") === "top") {
            var fabButtonHeight = this.el.querySelector("se-fab").shadowRoot.querySelector("se-button").shadowRoot.querySelector("button");
            var fabHeight = this.el.querySelector("se-fab").shadowRoot.querySelector("div").offsetTop;
            if (!!tooltipPosition && tooltipPosition === "left") {
                this.el.shadowRoot.querySelector(".tooltip").setAttribute("style", "top: calc(" + fabHeight + "px + " + fabButtonHeight.offsetTop + "px + (" + fabButtonHeight.offsetHeight + "px / 2))");
            }
            else if (!!tooltipPosition && tooltipPosition === "top") {
                this.el.shadowRoot.querySelector(".tooltip").setAttribute("style", "bottom: calc(100vh - " + fabHeight + "px - 8px ");
            }
            else if (tooltipPosition === null || tooltipPosition === "bottom") {
                this.el.shadowRoot.querySelector(".tooltip").setAttribute("style", "top: calc(" + fabHeight + "px + " + fabButtonHeight.offsetHeight + "px + 8px");
            }
        }
        return (h("div", { class: [
                this.position ? "tooltip-" + this.position : 'tooltip-bottom',
                containsFab ? "tooltip-fab" + (containsFab.getAttribute("position") === "top" ? '-top' : '') : ''
            ]
                .join(' ') }, h("div", { onClick: this.action == "click" ? function (ev) { _this._toggle(ev); } : function () { } }, h("slot", { name: "tooltip" })), h("div", { class: (this.opened ? "show" : "") + " tooltip" }, h("slot", null))));
    };
    Object.defineProperty(class_1.prototype, "el", {
        get: function () { return getElement(this); },
        enumerable: true,
        configurable: true
    });
    return class_1;
}());
TooltipComponent.style = tooltipCss;
var tooltipContentCss = ":host{position:relative}.tooltip-content{position:relative;font-size:14px;line-height:17px;display:-ms-flexbox;display:flex}.se-icon{font-family:\"se-icon\";padding-top:4px;padding-right:5px}";
var TooltipContentComponent = /** @class */ (function () {
    function TooltipContentComponent(hostRef) {
        registerInstance(this, hostRef);
    }
    TooltipContentComponent.prototype.render = function () {
        return (h("div", { class: "tooltip-content" }, this.icon && h("se-icon", { class: "se-icon", size: "small" }, this.icon), h("slot", { name: "icon" }), h("slot", null)));
    };
    return TooltipContentComponent;
}());
TooltipContentComponent.style = tooltipContentCss;
var tooltipFooterCss = ":host{position:relative;display:-ms-flexbox;display:flex;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-moz-align-items:center;-ms-flex-align:center;align-items:center;font-size:14px;line-height:17px}.flex{display:-ms-flexbox;display:flex;-moz-flex-direction:row;-ms-flex-direction:row;flex-direction:row}";
var TooltipFooterComponent = /** @class */ (function () {
    function TooltipFooterComponent(hostRef) {
        registerInstance(this, hostRef);
    }
    TooltipFooterComponent.prototype.render = function () {
        return [
            h("div", { class: "flex" }, h("slot", { name: "start" })),
            h("slot", null)
        ];
    };
    return TooltipFooterComponent;
}());
TooltipFooterComponent.style = tooltipFooterCss;
var tooltipHeaderCss = ":host{position:relative}.tooltip-header{-moz-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;display:-ms-flexbox;display:flex;position:relative;font-weight:600;font-size:14px;line-height:17px}.se-icon{font-family:\"se-icon\";padding-right:5px}";
var TooltipHeaderComponent = /** @class */ (function () {
    function TooltipHeaderComponent(hostRef) {
        registerInstance(this, hostRef);
    }
    TooltipHeaderComponent.prototype.render = function () {
        return [
            h("div", { class: "tooltip-header" }, this.icon && h("se-icon", { class: "se-icon", size: "small" }, this.icon), h("slot", { name: "icon" }), h("slot", null)),
            h("slot", { name: "end" })
        ];
    };
    return TooltipHeaderComponent;
}());
TooltipHeaderComponent.style = tooltipHeaderCss;
export { TooltipComponent as se_tooltip, TooltipContentComponent as se_tooltip_content, TooltipFooterComponent as se_tooltip_footer, TooltipHeaderComponent as se_tooltip_header };
