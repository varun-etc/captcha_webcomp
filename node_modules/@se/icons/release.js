const fs = require('fs-extra');
const path = require('path');
const execa = require('execa');

// Access the current package location
function packagePath(project) {
  return path.join(__dirname, project, 'package.json');
}

// Get access to the package.json file an return it as an object
function readPkg(project) {
  const packageJsonPath = packagePath(project);
  return JSON.parse(fs.readFileSync(packageJsonPath, 'utf-8'));
}

// Make sure that we are not publishing twice the same version
function alreadyDeployedVersion(name, version, tag = 'latest') {
  const {stdout} = execa.sync('yarn', ['info', name, `dist-tags.${tag}`, '-s']);
  console.log('deployed version: ', stdout);
  return stdout === version;
}

function publishPackage(tag = 'latest') {
  execa.sync('npm', ['publish', '--tag', tag]);
}

async function main() {
  try {
    const { name, version } = readPkg('');
    const tag = "latest";

    // Do not deploy a version if already published
    if (alreadyDeployedVersion(name, version, tag)){
      console.log('\n Package version already deployed \n');
      process.exit(1);
    }

    publishPackage(tag);

    console.log(`\n${name} ${version} published!! ðŸŽ‰\n`);

  } catch (err) {
    console.log('\n', err, '\n');
    process.exit(1);
  }
}

main();
