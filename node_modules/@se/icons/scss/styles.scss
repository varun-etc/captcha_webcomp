$se-icon-folder: "../fonts" !default;
$se-icon-family: "se-icon" !default;
$se-generate-font-class: "true" !default; // "true" or "false"
$se-generate-ionic-font-class: "false" !default; // "true" or "false"

@import './variables';
@import './mixin';

// Font-face rules
@font-face {
  font-family: $se-icon-family;
  src: url("#{$se-icon-folder}/#{$se-icon-family}.eot");
  src: url("#{$se-icon-folder}/#{$se-icon-family}.eot?#iefix") format("embedded-opentype"),
       url("#{$se-icon-folder}/#{$se-icon-family}.woff") format("woff"),
       url("#{$se-icon-folder}/#{$se-icon-family}.ttf") format("truetype"),
       url("#{$se-icon-folder}/#{$se-icon-family}.svg##{$se-icon-family}") format("svg");
  font-weight: normal;
  font-style: normal;
}


// /*FIX FONT FOR GOOGLE CHROME ON WINDOWS*/
// @media screen and (-webkit-min-device-pixel-ratio:0) {
//   @font-face {
//     font-family: $se-icon-family;
//     src: url("#{$se-icon-folder}/#{$se-icon-family}.svg##{$se-icon-family}") format("svg");
//   }
// }

[class*="#{$se-icon-family}"]{
  /* use !important to prevent issues with browser extensions that change fonts */  
  font-family: $se-icon-family;

  speak: none;
  font-style: normal;
  line-height: 1;
  position: relative;
  top: 1px;
  display: inline-block;

  // Default the size of the icons. 
  font-size: 24px;

  // font-weight: 400;
  font-weight: normal;
  font-variant: normal;
  text-decoration: inherit;
  font-stretch: normal;
  text-transform: none;

  //font: normal normal normal 14px/1 FontAwesome; // shortening font declaration
  font-size: inherit; // can't have font-size inherit on line above, so need to override
  text-rendering: auto; // optimizelegibility throws things off #1094
  /* Better Font Rendering =========== */
  font-smoothing: antialiased;

  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  /* Support for IE. */
  font-feature-settings: 'liga';

  font-display: block;
}


@if $se-generate-font-class == 'true' {

  // if we want to use icon as class and as ligature 
  @each $seIcon in $seIcons {
    @include makeIcon(nth($seIcon, 1), nth($seIcon, 2));
  }
}

@if $se-generate-ionic-font-class == 'true' {

  // if we want to use icons in ionic project (for tab icon for example) 
  @each $seIcon in $seIcons {
    @include makeIconIonic(nth($seIcon, 1), nth($seIcon, 2));
  }
}



.icon-style{
  cursor: pointer;
}



// How to use 
// ------------------------------------------------------------------
// Below are generated placeholder class that can be easily extended throughout your project. We at the Toadstool
// team believe that CSS rules should be extended in your CSS, not the DOM.

// To use, from your CSS selector, simply extend one of the following rules like so:
// .github {
//   foo: bar;
//   @extend %icon-github;
// }
