# docker build --build-arg  GITHUB_TOKEN="<token>" --build-arg NPM_TOKEN="<token>" -t francoisd/se-icon-webapp .
# docker build --env-file=".env" -t francoisd/se-icon-webapp .
# docker-compose up -d

FROM nikolaik/python-nodejs:python3.7-nodejs12-stretch	
# FROM nikolaik/python-nodejs:python2.7-nodejs12-stretch	

ARG NODE_ENV=prod 
ARG GITHUB_TOKEN
ARG NPM_TOKEN
ARG GITHUB_REPO="IoT/se-icons.git"
ARG PROXY=http://165.225.38.37:80

ENV NODE_ENV=$NODE_ENV
ENV NPM_TOKEN=$NPM_TOKEN
ENV GITHUB_TOKEN=$GITHUB_TOKEN
ENV GITHUB_REPO=$GITHUB_REPO
ENV http_proxy=$PROXY
ENV https_proxy=$PROXY

RUN apt-get update -o Acquire::https::dl.yarnpkg.com::Verify-Peer=false -o Acquire::https::deb.nodesource.com::Verify-Peer=false \
  && apt-get -y install fontforge ttfautohint eot-utils

# # Fix issue with python3 on ubuntu https://github.com/pypa/virtualenv/issues/410
# RUN rm /usr/lib/python2.7/_sysconfigdata_nd.py \
#   && sudo ln -fs /usr/lib/python2.7/plat-i386-linux-gnu/_sysconfigdata_nd.py /usr/lib/python2.7/


RUN npm config set "@se:registry" "https://nexus.tools.struxurewarecloud.com/repository/app-services-npm/" \
  && npm config set "//nexus.tools.struxurewarecloud.com/repository/app-services-npm/:_authToken" "111b0cc2-47f6-3278-9e6c-1e974bc5b92d" \
  && yarn config set strict-ssl false

# if inside SE VPN, define https-proxy and proxy else, leave remove the variables
# ex:
RUN npm config set "proxy" $PROXY \
  && npm config set "https-proxy" $PROXY 

WORKDIR /app/
RUN npm -v
RUN node -v

# Configure the Client side and build it
COPY ./package*.json ./
COPY ./yarn.lock ./

RUN yarn install

COPY ./ .
RUN yarn build


# Publish the library to nexus (npm-internal)
# RUN npm config set "@se:registry" "https://nexus.tools.struxurewarecloud.com/repository/npm-internal/" \
#   && npm config set "//nexus.tools.struxurewarecloud.com/repository/npm-internal/:_authToken" $NPM_TOKEN
# RUN yarn release


# # Deploy the website to github page
# RUN git config --global http.proxy "" \ 
#   && git config --global https.proxy "" \
#   && git config --global user.email "jenkins-dev@se.com" \
#   && git config --global user.name "Jenkins Dev" 
# RUN yarn deploy



# EXPOSE 5000
CMD [ "yarn", "start" ]

# docker run -p 5000:5000 -d francoisd/se-icon-webapp
